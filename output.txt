Tokens:
[FUN,MAIN,LPAREN,RPAREN,LBRACE,VAR,ID "a",COLON,INT,ASSIGN,NUM 10,SEMICOLON,VAL,ID "b",COLON,DOUBLE,ASSIGN,REAL 20.5,SEMICOLON,PRINT,LPAREN,SENTENCE "Initial values of a: ",PLUS,ID "a",PLUS,SENTENCE " and b: ",PLUS,ID "b",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,ID "a",ASSIGN,NUM 15,SEMICOLON,PRINT,LPAREN,SENTENCE "Updated value of a: ",PLUS,ID "a",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,VAL,ID "sum",COLON,DOUBLE,ASSIGN,ID "a",PLUS,ID "b",SEMICOLON,VAL,ID "difference",COLON,DOUBLE,ASSIGN,ID "b",MINUS,ID "a",SEMICOLON,VAL,ID "product",COLON,DOUBLE,ASSIGN,ID "a",MULT,ID "b",SEMICOLON,VAL,ID "quotient",COLON,DOUBLE,ASSIGN,ID "b",DIV,ID "a",SEMICOLON,VAL,ID "remainder",COLON,DOUBLE,ASSIGN,ID "b",MOD,ID "a",SEMICOLON,PRINT,LPAREN,SENTENCE "Arithmetic expressions:\\n",RPAREN,SEMICOLON,PRINT,LPAREN,SENTENCE "Sum: ",PLUS,ID "sum",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,PRINT,LPAREN,SENTENCE "Difference: ",PLUS,ID "difference",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,PRINT,LPAREN,SENTENCE "Product: ",PLUS,ID "product",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,PRINT,LPAREN,SENTENCE "Quotient: ",PLUS,ID "quotient",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,PRINT,LPAREN,SENTENCE "Remainder: ",PLUS,ID "remainder",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,VAL,ID "isAGreaterThanB",COLON,BOOLEAN,ASSIGN,ID "a",GREATER,ID "b",SEMICOLON,VAL,ID "isALessThanB",COLON,BOOLEAN,ASSIGN,ID "a",LESS,ID "b",SEMICOLON,PRINT,LPAREN,SENTENCE "Boolean expressions:\\n",RPAREN,SEMICOLON,PRINT,LPAREN,SENTENCE "Is a greater than b? ",PLUS,ID "isAGreaterThanB",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,PRINT,LPAREN,SENTENCE "Is a less than b? ",PLUS,ID "isALessThanB",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,PRINT,LPAREN,SENTENCE "Enter your name: ",RPAREN,SEMICOLON,VAL,ID "name",COLON,STRING,ASSIGN,READLN,LPAREN,RPAREN,SEMICOLON,PRINT,LPAREN,SENTENCE "Hello, ",PLUS,ID "name",PLUS,SENTENCE "!",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,PRINT,LPAREN,SENTENCE "Conditional expression:\\n",RPAREN,SEMICOLON,IF,LPAREN,ID "a",GREATER,ID "b",RPAREN,LBRACE,PRINT,LPAREN,SENTENCE "a is greater than b\\n",RPAREN,SEMICOLON,RBRACE,ELSE,LBRACE,IF,LPAREN,ID "a",LESS,ID "b",RPAREN,LBRACE,PRINT,LPAREN,SENTENCE "a is less than b\\n",RPAREN,SEMICOLON,RBRACE,ELSE,LBRACE,PRINT,LPAREN,SENTENCE "a is equal to b\\n",RPAREN,SEMICOLON,RBRACE,RBRACE,VAR,ID "counter",COLON,INT,ASSIGN,NUM 0,SEMICOLON,PRINT,LPAREN,SENTENCE "While loop:\\n",RPAREN,SEMICOLON,WHILE,LPAREN,ID "counter",LESS,NUM 5,RPAREN,LBRACE,PRINT,LPAREN,SENTENCE "Counter: ",PLUS,ID "counter",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,ID "counter",INCREMENT,SEMICOLON,RBRACE,VAR,ID "x",COLON,INT,ASSIGN,NUM 5,SEMICOLON,PRINT,LPAREN,SENTENCE "Counting down with a while loop:\\n",RPAREN,SEMICOLON,WHILE,LPAREN,ID "x",GREATER,NUM 0,RPAREN,LBRACE,PRINT,LPAREN,SENTENCE "x = ",PLUS,ID "x",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,ID "x",DECREMENT,SEMICOLON,RBRACE,PRINT,LPAREN,SENTENCE "Chars:\\n",RPAREN,SEMICOLON,VAL,ID "c1",COLON,CHAR,ASSIGN,LETTER "a",SEMICOLON,PRINT,LPAREN,SENTENCE "a: ",PLUS,ID "c1",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,VAL,ID "c2",COLON,CHAR,ASSIGN,LETTER "\\n",SEMICOLON,PRINT,LPAREN,SENTENCE "\\\\n: ",PLUS,ID "c2",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,VAL,ID "c3",COLON,CHAR,ASSIGN,LETTER "\\\\",SEMICOLON,PRINT,LPAREN,SENTENCE "\\\\\\\\: ",PLUS,ID "c3",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,VAL,ID "c4",COLON,CHAR,ASSIGN,LETTER " ",SEMICOLON,PRINT,LPAREN,SENTENCE " : ",PLUS,ID "c4",PLUS,SENTENCE "\\n",RPAREN,SEMICOLON,PRINT,LPAREN,SENTENCE "Kotlin test complete!\\n",RPAREN,SEMICOLON,RBRACE]

AST:
Statements [VarDecl "a" IntType (Num 10),ValDecl "b" DoubleType (Real 20.5),PrintStmt (Add (Add (Add (Add (Sentence "Initial values of a: ") (Id "a")) (Sentence " and b: ")) (Id "b")) (Sentence "\\n")),Assignment "a" (Num 15),PrintStmt (Add (Add (Sentence "Updated value of a: ") (Id "a")) (Sentence "\\n")),ValDecl "sum" DoubleType (Add (Id "a") (Id "b")),ValDecl "difference" DoubleType (Sub (Id "b") (Id "a")),ValDecl "product" DoubleType (Mult (Id "a") (Id "b")),ValDecl "quotient" DoubleType (Div (Id "b") (Id "a")),ValDecl "remainder" DoubleType (Mod (Id "b") (Id "a")),PrintStmt (Sentence "Arithmetic expressions:\\n"),PrintStmt (Add (Add (Sentence "Sum: ") (Id "sum")) (Sentence "\\n")),PrintStmt (Add (Add (Sentence "Difference: ") (Id "difference")) (Sentence "\\n")),PrintStmt (Add (Add (Sentence "Product: ") (Id "product")) (Sentence "\\n")),PrintStmt (Add (Add (Sentence "Quotient: ") (Id "quotient")) (Sentence "\\n")),PrintStmt (Add (Add (Sentence "Remainder: ") (Id "remainder")) (Sentence "\\n")),ValDecl "isAGreaterThanB" BooleanType (Less (Id "b") (Id "a")),ValDecl "isALessThanB" BooleanType (Less (Id "a") (Id "b")),PrintStmt (Sentence "Boolean expressions:\\n"),PrintStmt (Add (Add (Sentence "Is a greater than b? ") (Id "isAGreaterThanB")) (Sentence "\\n")),PrintStmt (Add (Add (Sentence "Is a less than b? ") (Id "isALessThanB")) (Sentence "\\n")),PrintStmt (Sentence "Enter your name: "),ValDecl "name" StringType ReadlnStmt,PrintStmt (Add (Add (Add (Sentence "Hello, ") (Id "name")) (Sentence "!")) (Sentence "\\n")),PrintStmt (Sentence "Conditional expression:\\n"),IfElseStmt (Less (Id "b") (Id "a")) (Statements [PrintStmt (Sentence "a is greater than b\\n")]) (Statements [IfElseStmt (Less (Id "a") (Id "b")) (Statements [PrintStmt (Sentence "a is less than b\\n")]) (Statements [PrintStmt (Sentence "a is equal to b\\n")])]),VarDecl "counter" IntType (Num 0),PrintStmt (Sentence "While loop:\\n"),WhileStmt (Less (Id "counter") (Num 5)) (Statements [PrintStmt (Add (Add (Sentence "Counter: ") (Id "counter")) (Sentence "\\n")),Assignment "counter" (Add (Id "counter") (Num 1))]),VarDecl "x" IntType (Num 5),PrintStmt (Sentence "Counting down with a while loop:\\n"),WhileStmt (Less (Num 0) (Id "x")) (Statements [PrintStmt (Add (Add (Sentence "x = ") (Id "x")) (Sentence "\\n")),Assignment "x" (Sub (Id "x") (Num 1))]),PrintStmt (Sentence "Chars:\\n"),ValDecl "c1" CharType (Letter "a"),PrintStmt (Add (Add (Sentence "a: ") (Id "c1")) (Sentence "\\n")),ValDecl "c2" CharType (Letter "\\n"),PrintStmt (Add (Add (Sentence "\\\\n: ") (Id "c2")) (Sentence "\\n")),ValDecl "c3" CharType (Letter "\\\\"),PrintStmt (Add (Add (Sentence "\\\\\\\\: ") (Id "c3")) (Sentence "\\n")),ValDecl "c4" CharType (Letter " "),PrintStmt (Add (Add (Sentence " : ") (Id "c4")) (Sentence "\\n")),PrintStmt (Sentence "Kotlin test complete!\\n")]

